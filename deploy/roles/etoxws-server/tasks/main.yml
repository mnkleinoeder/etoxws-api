---
- include_vars: "{{ansible_distribution}}.yml"
- include_vars: "{{ansible_distribution}}-{{ansible_distribution_major_version}}.yml"

###############################################################################
# local variables
###############################################################################
- set_fact: etoxws_virtenv=/opt/virtualenv/{{ETOXWS_NAME}}
- set_fact: etoxws_pip={{etoxws_virtenv}}/bin/pip
- set_fact: etoxws_python={{etoxws_virtenv}}/bin/python
- set_fact: etoxws_celery={{etoxws_virtenv}}/bin/celery
- set_fact: etoxws_wsgi={{VHOST_CONF_DIR}}/{{ETOXWS_NAME}}.wsgi
- set_fact: etoxws_conf={{VHOST_CONF_DIR}}/{{ETOXWS_NAME}}.conf
- set_fact: etoxws_db_token={{ETOXWS_NAME|replace('.','_')}}

###############################################################################
# OS dependent tasks
###############################################################################
- include: Ubuntu.yml
  when: ansible_distribution == "Ubuntu"

- include: CentOS.yml
  when: ansible_distribution == "CentOS"

- debug: var=ETOXWS_IMPL_V3
#- pause:
#    prompt: 'Settings okay?. Press return to continue. Press Ctrl+c and then "a" to abort'

###############################################################################
# setting up postgres
# we suppose that postgres has been installed already
# we just check that we have superuser access via sudo -u postgres
###############################################################################
- lineinfile:
    dest:   "{{postgres_main_conf}}"
    line:   "local   all         all                                         md5"
    regexp: "^local.*md5$"
  register: pg1
  
- lineinfile:
    dest:   "{{postgres_main_conf}}"
    line:   "local   all             postgres                                peer"
    regexp: "^local.*peer$"
    insertbefore: '^local.*md5$'
  register: pg2

- service: name={{postgres_service_name}} state=restarted
  when: pg1|changed or pg2|changed

- postgresql_db:
    name: '{{etoxws_db_token}}'
    state: absent
  sudo: yes
  sudo_user: postgres
  when: ETOXWS_CLEAN_DB | bool

- postgresql_db:
    name:       "{{etoxws_db_token}}"
    encoding:   'UTF-8'
    lc_collate: 'en_US.UTF-8'
    lc_ctype:   'en_US.UTF-8'
    template:   'template0'
  sudo: yes
  sudo_user: postgres

- postgresql_user:
    db:       "{{etoxws_db_token}}"
    name:     "{{etoxws_db_token}}"
    password: "{{ETOXWS_SERVICE_PASSWD}}"
  sudo: yes
  sudo_user: postgres

###############################################################################
# get the webapp code
###############################################################################
#    repo="/root/etoxws-api/"
#    repo="https://github.com/mnkleinoeder/etoxws-api.git"
#    version=monitoring
- name: fetch code from github
  git:
    repo: "https://github.com/mnkleinoeder/etoxws-api.git"
    dest: "{{ETOXWS_APPDIR}}"
    force: yes
    version: "{{ ETOXWS_GIT_TAG }}"
  notify: reload apache

###############################################################################
# setting up the virtual env
###############################################################################

- file: path=/opt/virtualenv state=directory mode=755

- shell: virtualenv {{etoxws_virtenv}}
    creates={{etoxws_virtenv}}

- pip:
    name: pip
    state: present
    version: 7.1.2
    executable: "{{etoxws_pip}}"
  register: r
  ignore_errors: true

- pip:
    requirements: "{{ETOXWS_APPDIR}}/pip_requirements.txt"
    executable: "{{etoxws_pip}}"

- pip:
    name: argparse
    executable: "{{etoxws_pip}}"
  when: python_version == "2.6"

###############################################################################
# enable the task management toolchain
###############################################################################

- service: name=rabbitmq-server enabled=yes

- template:
    src:  "rabbitmq-env.conf.j2"
    dest: "/etc/rabbitmq/rabbitmq-env.conf"
  register: r

- service:
    name:  rabbitmq-server
    state: restarted
  when: r.changed

- rabbitmq_vhost:
    name: "{{MQ_VHOST}}"
    node: "{{MQ_NODE}}"
    state: present
  environment:
    RABBITMQ_NODENAME: "{{MQ_NODE}}"

- rabbitmq_user:
    vhost: "{{MQ_VHOST}}"
    user: "{{MQ_USERNAME}}"
    password: "{{ETOXWS_SERVICE_PASSWD}}"
    configure_priv: .*
    read_priv: .*
    write_priv: .*
    node: "{{MQ_NODE}}"
    state: present
  environment:
    RABBITMQ_NODENAME: "{{MQ_NODE}}"

- rabbitmq_user:
    user: guest
    state: absent
    node: "{{MQ_NODE}}"
  environment:
    RABBITMQ_NODENAME: "{{MQ_NODE}}"

- file: path={{item}} state=directory
  with_items:
  - "{{supervisord_conf_dir}}"
  - "/var/log/celery"

###############################################################################
# configuration of the webapp
###############################################################################
- name: copy helper script for setting the runtime env
  template:
    src:  "{{ item.src }}"
    dest: "{{ ETOXWS_APPDIR }}/{{ item.dest }}"
    mode: 644
  with_items:
  - { src: make_env.sh.j2, dest: make_env.sh }
  - { src: setting_local.py.j2, dest: src/etoxwsapi/settings/settings_local.py }

- shell: . {{ETOXWS_APPDIR}}/make_env.sh && python manage.py syncdb --noinput
    chdir="{{ETOXWS_APPDIR}}/src/etoxwsapi"
  register: r
  changed_when: not "Installed 0 object(s) from 0 fixture(s)" in r.stdout

# PyDev debugger support
# see: http://brianfisher.name/content/remote-debugging-python-eclipse-and-pydev
# and  http://pydev.org/manual_adv_remote_debugger.html
- set_fact:
    pydevd: ""
  when: ETOXWS_PRODUCTION|bool
- set_fact:
    pydevd: "/opt/pydevd/pysrc"
  when: not ETOXWS_PRODUCTION|bool
  
- file: path=/opt/pydevd state=directory
  when: not ETOXWS_PRODUCTION|bool

# manually copy pydevd files from your pydev installation
# eg:
# $ cd ~/.p2/pool/plugins/org.python.pydev_4.4.0.201510052309
# $ rsync -rv pysrc root@<IP_TO_SERVER>:/opt/pydevd/

###############################################################################
# creating a fall-back WS3 compliant views file which is actually
# only a copy of WS2 with minor adaptions.
# actually, all VMs should already contain a WS3 implementation
# with license informations.
###############################################################################
- set_fact:
    views_path: "/home/modeler/soft/eTOXlab/ws"

- stat:
    path: "{{ views_path }}/views3.py"
  register: p

- shell: cp {{ views_path }}/views2.py {{ views_path }}/views3.py
  notify: reload apache
  when: not p.stat.exists

- lineinfile:
    dest:   "{{ views_path }}/views3.py"
    regexp: "{{ item.r }}"
    line:   "{{ item.l }}"
  with_items:
  - { r: 'from etoxwsapi.v\d import schema', l: "from etoxwsapi.v3 import schema" }
  - { r: 'from etoxwsapi.v\d.wsbase import WebserviceImplementationBase', l: "from etoxwsapi.v3.wsbase import WebserviceImplementationBase" }
  - { r: 'class WS.*', l: "class WS3(WebserviceImplementationBase):" }
  notify: reload apache

- lineinfile: 
    dest:   "{{ ETOXWS_APPDIR }}/src/etoxwsapi/urls.py"
    regexp: include\(\'etoxwsapi\.v2\.urls\'\)\)
    state: absent
  notify: reload apache


- set_fact: _cel_variant=""
- template: 
    src:  "etoxws.celeryd.conf.j2"
    dest: "{{supervisord_conf_dir}}/{{ETOXWS_NAME}}.celeryd.{{ supervisor_conf_ext }}"
    mode: 644
  register: cel1

- name: no flower support anymore
  rabbitmq_plugin:
    names: rabbitmq_management
    state: disabled
- file:
    path:  "{{supervisord_conf_dir}}/{{ETOXWS_NAME}}.flower.{{ supervisor_conf_ext }}"
    state: absent
  register: cel2

- supervisorctl:
    name:  "{{ETOXWS_NAME}}"
    state: stopped
  when: cel1|changed or cel2|changed

- supervisorctl: name={{ETOXWS_NAME}} state=started

###############################################################################
# apache setup
###############################################################################

- template: src="etoxws.wsgi.py.j2" dest={{etoxws_wsgi}}
  notify: reload apache

- set_fact: _ssl=""
- template: src="etoxws.apache.conf.j2" dest={{etoxws_conf}}-nossl
  notify: reload apache

- set_fact: _ssl="-ssl"
- template: src="etoxws.apache.conf.j2" dest={{etoxws_conf}}-ssl
  notify: reload apache


