---
- include_vars: "{{ansible_distribution}}.yml"
- include_vars: "{{ansible_distribution}}-{{ansible_distribution_major_version}}.yml"

###############################################################################
# local variables
###############################################################################
- set_fact: etoxws_virtenv=/opt/virtualenv/{{ETOXWS_NAME}}
- set_fact: etoxws_pip={{etoxws_virtenv}}/bin/pip
- set_fact: etoxws_python={{etoxws_virtenv}}/bin/python
- set_fact: etoxws_celery={{etoxws_virtenv}}/bin/celery
- set_fact: etoxws_wsgi={{VHOST_CONF_DIR}}/{{ETOXWS_NAME}}.wsgi
- set_fact: etoxws_conf={{VHOST_CONF_DIR}}/{{ETOXWS_NAME}}.conf

###############################################################################
# OS dependent tasks
###############################################################################
- include: Ubuntu.yml
  when: ansible_distribution == "Ubuntu"

- include: CentOS.yml
  when: ansible_distribution == "CentOS"

###############################################################################
# setting up postgres
# we suppose that postgres has been installed already
# we just check that we have superuser access via sudo -u postgres
###############################################################################
#- lineinfile: dest={{postgres_main_conf}}
#    state=absent
#    regexp="^local.*md5$"
#  register: pg1
- lineinfile: dest={{postgres_main_conf}}
    line="local   all         all                                         md5"
    regexp="^local.*md5$"
  register: pg1
  
# order is important: next line must come before the md5 line
# otherwise 'sudo - postgres psql' fails
- name: remove peer line in order to trigger correct order
  lineinfile: dest={{postgres_main_conf}}
    regexp="^local.*peer$"
    state=absent
- lineinfile: dest={{postgres_main_conf}}
    line="local   all             postgres                                peer"
    regexp="^local.*peer$"
    insertbefore='^local.*md5$'
  register: pg2

- service: name={{postgres_service_name}} state=restarted
  when: pg1|changed or pg2|changed

- set_fact:
    etoxws_db_token: "{{ETOXWS_NAME|replace('.','_')}}"

- postgresql_db: name='{{etoxws_db_token}}' state=absent
  sudo: yes
  sudo_user: postgres
  when: ETOXWS_CLEAN_DB | bool

- postgresql_db: name={{etoxws_db_token}}
                 encoding='UTF-8'
                 lc_collate='en_US.UTF-8'
                 lc_ctype='en_US.UTF-8'
                 template='template0'
  sudo: yes
  sudo_user: postgres

- postgresql_user: db={{etoxws_db_token}} name={{etoxws_db_token}} password={{ETOXWS_SERVICE_PASSWD}}
  sudo: yes
  sudo_user: postgres

###############################################################################
# get the webapp code
###############################################################################
#    repo="/root/etoxws-api/"
#    repo="https://github.com/mnkleinoeder/etoxws-api.git"
#    version=monitoring
- name: fetch code from github
  git: >
    repo="https://github.com/mnkleinoeder/etoxws-api.git"
    dest="{{ETOXWS_APPDIR}}"
    force=yes
    version=master
  notify: reload apache

###############################################################################
# setting up the virtual env
###############################################################################

- file: path=/opt/virtualenv state=directory mode=755

- shell: virtualenv {{etoxws_virtenv}}
    creates={{etoxws_virtenv}}

- pip: name=pip state=latest
    executable={{etoxws_pip}}

- pip: requirements={{ETOXWS_APPDIR}}/src/etoxwsapi/req.pip state=latest
    executable={{etoxws_pip}}

- pip: name=argparse
    executable={{etoxws_pip}}
  when: python_version == "2.6"

###############################################################################
# enable the task management toolchain
###############################################################################

- service: name=rabbitmq-server state=started enabled=yes
- rabbitmq_vhost: name={{MQ_VHOST}} state=present

#- rabbitmq_user: user={{MQ_USERNAME}}
#                 state=absent

- rabbitmq_user: user={{MQ_USERNAME}}
                 password={{ETOXWS_SERVICE_PASSWD}}
                 vhost={{MQ_VHOST}}
                 configure_priv=.*
                 read_priv=.*
                 write_priv=.*
                 state=present
                 #tags=administrator

- rabbitmq_user: user=guest state=absent

- rabbitmq_plugin: names=rabbitmq_management state=enabled

#- group: name={{ETOXWS_NAME}} system=yes state=present
#- user: name={{ETOXWS_NAME}} group={{ETOXWS_NAME}} system=yes state=present

- file: path={{item}} state=directory
  with_items:
  - "{{supervisord_conf_dir}}"
  - "/var/log/celery"

###############################################################################
# configuration of the webapp
###############################################################################
- name: copy helper script for setting the runtime env
  template: src=make_env.sh.j2 dest={{ETOXWS_APPDIR}}/make_env.sh mode=644

- name: copy local settings
  template: src=setting_local.py.j2 dest={{ETOXWS_APPDIR}}/src/etoxwsapi/settings/settings_local.py
#  when: ETOXWS_PRODUCTION|bool

#- template: src="launch_celery.sh" dest={{ETOXWS_APPDIR}}/launch_celery.sh mode=755

- shell: . {{ETOXWS_APPDIR}}/make_env.sh && python manage.py syncdb --noinput
    chdir="{{ETOXWS_APPDIR}}/src/etoxwsapi"
  register: r
  changed_when: not "Installed 0 object(s) from 0 fixture(s)" in r.stdout

#- ini_file: dest="{{supervisord_conf}}"
#            section=include
#            option=files
#            value="{{supervisord_conf_dir}}/*.conf"
#  register: cel1

# PyDev debugger support if not in production mode
# see: http://brianfisher.name/content/remote-debugging-python-eclipse-and-pydev
# and  http://pydev.org/manual_adv_remote_debugger.html
- set_fact: pydevd=""
  when: ETOXWS_PRODUCTION|bool
- set_fact: pydevd=/opt/pydevd/pysrc
  when: not ETOXWS_PRODUCTION|bool
  
- file: path=/opt/pydevd state=directory
  when: not ETOXWS_PRODUCTION|bool

# manually copy pydevd files from your pydev installation
# eg:
# $ cd ~/.p2/pool/plugins/org.python.pydev_4.4.0.201510052309
# $ rsync -rv pysrc root@<IP_TO_SERVER>:/opt/pydevd/

- lineinfile: dest="/home/modeler/soft/eTOXlab/ws/views2.py"
    insertbefore="(\s+)while True:"
    line="        jobobserver.report_started(p.pid)"
  ignore_errors: true

- lineinfile: "dest=/home/modeler/soft/eTOXlab/ws/views2.py
    state=absent
    line='        jobobserver.report_progress(0) # indicate that calculation has been started'"
  ignore_errors: true

- set_fact: _cel_variant=""
- template: src="etoxws.celeryd.conf.j2" dest={{supervisord_conf_dir}}/{{ETOXWS_NAME}}.celeryd.{{ supervisor_conf_ext }} mode=644
  register: cel1

- set_fact: _cel_variant="-flower"
- template: src="etoxws.celeryd.conf.j2" dest={{supervisord_conf_dir}}/{{ETOXWS_NAME}}.flower.{{ supervisor_conf_ext }} mode=644
  when: ETOXWS_PRODUCTION|bool
  register: cel2

- supervisorctl: name={{ETOXWS_NAME}} state=stopped
  when: cel1|changed or cel2|changed

- shell: sleep 5

- supervisorctl: name={{ETOXWS_NAME}} state=started

###############################################################################
# apache setup
###############################################################################

- template: src="etoxws.wsgi.py.j2" dest={{etoxws_wsgi}}
  notify: restart apache

- set_fact: _ssl=""
- template: src="etoxws.apache.conf.j2" dest={{etoxws_conf}}-nossl
  notify: restart apache

- set_fact: _ssl="-ssl"
- template: src="etoxws.apache.conf.j2" dest={{etoxws_conf}}-ssl
  notify: restart apache


